// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PayRight.Cadastro.Infra.Contexts;

#nullable disable

namespace PayRight.Cadastro.Infra.Migrations
{
    [DbContext(typeof(ContextoDbCadastroEscrita))]
    [Migration("20211222164336_PrimeiroMigrate")]
    partial class PrimeiroMigrate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("PayRight.Cadastro.Domain.Entities.Usuario", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<bool>("Ativo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(true);

                    b.Property<DateTime>("CriadoEm")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)")
                        .HasDefaultValueSql("NOW()");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("UltimaAtualizacaoEm")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("Id");

                    b.ToTable("usuarios", (string)null);
                });

            modelBuilder.Entity("PayRight.Cadastro.Domain.Entities.Usuario", b =>
                {
                    b.OwnsOne("PayRight.Cadastro.Domain.ValueObjects.Documento", "Documento", b1 =>
                        {
                            b1.Property<Guid>("UsuarioId")
                                .HasColumnType("char(36)");

                            b1.Property<string>("Numero")
                                .IsRequired()
                                .HasMaxLength(14)
                                .HasColumnType("varchar(14)")
                                .HasColumnName("documento");

                            b1.Property<int>("TipoDocumento")
                                .HasColumnType("int")
                                .HasColumnName("tipo_documento");

                            b1.HasKey("UsuarioId");

                            b1.HasIndex("Numero")
                                .IsUnique()
                                .HasDatabaseName("idx_numero_documento");

                            b1.ToTable("usuarios");

                            b1.WithOwner()
                                .HasForeignKey("UsuarioId");
                        });

                    b.OwnsOne("PayRight.Cadastro.Domain.ValueObjects.Email", "NomeUsuario", b1 =>
                        {
                            b1.Property<Guid>("UsuarioId")
                                .HasColumnType("char(36)");

                            b1.Property<string>("Endereco")
                                .IsRequired()
                                .HasMaxLength(80)
                                .HasColumnType("varchar(80)")
                                .HasColumnName("email");

                            b1.HasKey("UsuarioId");

                            b1.HasIndex("Endereco")
                                .IsUnique()
                                .HasDatabaseName("idx_email");

                            b1.ToTable("usuarios");

                            b1.WithOwner()
                                .HasForeignKey("UsuarioId");
                        });

                    b.OwnsOne("PayRight.Cadastro.Domain.ValueObjects.NomeCompleto", "NomeCompleto", b1 =>
                        {
                            b1.Property<Guid>("UsuarioId")
                                .HasColumnType("char(36)");

                            b1.Property<string>("PrimeiroNome")
                                .IsRequired()
                                .HasMaxLength(64)
                                .HasColumnType("varchar(64)")
                                .HasColumnName("primeiro_nome");

                            b1.Property<string>("Sobrenome")
                                .IsRequired()
                                .HasMaxLength(64)
                                .HasColumnType("varchar(64)")
                                .HasColumnName("sobrenome");

                            b1.HasKey("UsuarioId");

                            b1.ToTable("usuarios");

                            b1.WithOwner()
                                .HasForeignKey("UsuarioId");
                        });

                    b.Navigation("Documento")
                        .IsRequired();

                    b.Navigation("NomeCompleto")
                        .IsRequired();

                    b.Navigation("NomeUsuario")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
